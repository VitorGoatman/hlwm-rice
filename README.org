#+TITLE: Herbstluftwm Config
#+PROPERTY: header-args :tangle autostart :tangle-mode (identity #o755)

** About This Config
This is my personal hlwm config. Most of it is just the default hlwm config with minor tweaks.
I'll probably add my panel config here sometime soon.

** AUTOSTART
*** Start HLWM
#+BEGIN_SRC bash
#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

#xsetroot -solid '#5A8E3A'

# remove all existing keybindings
hc keyunbind --all
#+END_SRC

*** Keybinds
**** Core
Set the modifier keys and binds for reloading and exiting HLWM.

#+BEGIN_SRC bash
Mod=Mod4   # Use the super key as the main modifier
Alt=Mod1   # Use the alt key as an secondary modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
#+END_SRC

**** Launch Programs
A nice thing about hlwm's config being written in shell is that our system's environment
variables such as =$BROWSER=, =$EDITOR= and =$TERM= are usable in the keybinds.

#+BEGIN_SRC bash
hc keybind $Mod-Return spawn "${TERM:-st}" # use your $TERMinal with st as fallback
hc keybind $Mod-d spawn dmenu_run
hc keybind $Mod-F1 spawn i3-scrot
hc keybind $Mod-Ctrl-F1 spawn i3-scrot -w
hc keybind $Mod-$Alt-F1 spawn flameshot gui
hc keybind $Mod-Shift-d spawn clipmenu
hc keybind $Mod-w spawn $BROWSER
hc keybind $Mod-$Alt-v spawn $TERM -e 'nvim'
hc keybind $Mod-$Alt-w spawn $TERM -e 'emacs /home/bode/orgwiki/index.org'
hc keybind $Mod-$Alt-y spawn $TERM -e 'straw-viewer'
hc keybind $Mod-$Alt-m spawn $TERM -e 'mocp'
hc keybind $Mod-$Alt-c spawn $TERM -e 'castero'
#+END_SRC

**** Focus

#+BEGIN_SRC bash
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent
#+END_SRC

**** Movement
#+BEGIN_SRC bash
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right
#+END_SRC

**** Controlling Frames
#+BEGIN_SRC bash
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep
#+END_SRC

**** Tags
#+BEGIN_SRC bash
tag_names=( {1..8} )
tag_keys=( {1..8} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible
#+END_SRC

**** Layouts
#+BEGIN_SRC bash
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1
#+END_SRC

**** Mouse Binds
#+BEGIN_SRC bash
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize
#+END_SRC

**** Focus
#+BEGIN_SRC bash
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent
#+END_SRC

*** Theming
#+BEGIN_SRC bash
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#A3BE8C'
hc set frame_border_normal_color '#4C566A'
hc set frame_bg_normal_color '#5E81AC'
hc set frame_bg_active_color '#8FBCBB'
hc set frame_border_width 1
hc set always_show_frame 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 2
hc set frame_gap 4

hc attr theme.active.color '#A3BE8C'
hc attr theme.normal.color '#4C566A'
hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 1
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3A4A00'
hc attr theme.background_color '#2AA'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings 1
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0
#+END_SRC

*** Rules
#+BEGIN_SRC bash
hc unrule -F
hc rule class=mpv tag=5 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock
#+END_SRC

*** Monitors
#+BEGIN_SRC bash
# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors
#+END_SRC

*** Panel
#+BEGIN_SRC bash
panel=~/.config/polybar/launch.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
#+END_SRC
